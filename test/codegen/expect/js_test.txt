// Messages from compiling js_test.dart
severe: [AnalyzerMessage] Target of URI does not exist: 'dom.dart' (test/codegen/js_test.dart, line 10, col 8)
severe: [AnalyzerMessage] Target of URI does not exist: 'minitest.dart' (test/codegen/js_test.dart, line 11, col 8)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 39, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 41, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 44, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 49, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 52, col 7)
severe: [AnalyzerMessage] The method 'equals' is not defined for the class 'Color' (test/codegen/js_test.dart, line 52, col 18)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 57, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 62, col 7)
severe: [AnalyzerMessage] The method 'isNot' is not defined for the class 'Color' (test/codegen/js_test.dart, line 62, col 20)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 63, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 68, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 71, col 7)
severe: [AnalyzerMessage] The method 'same' is not defined for the class 'Color' (test/codegen/js_test.dart, line 71, col 30)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 75, col 5)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 76, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 80, col 9)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 82, col 9)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 88, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 90, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 91, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 92, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 95, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 96, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 97, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 100, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 102, col 7)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 107, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 109, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 111, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 112, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 113, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 113, col 43)
severe: [AnalyzerMessage] Undefined name 'isNoSuchMethodError' (test/codegen/js_test.dart, line 113, col 51)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 116, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 119, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 120, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 123, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 125, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 129, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 132, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 133, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 136, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 139, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 141, col 7)
severe: [AnalyzerMessage] Undefined name 'isNotNull' (test/codegen/js_test.dart, line 141, col 39)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 144, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 146, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 149, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 152, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 155, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 159, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 162, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 167, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 170, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 172, col 7)
severe: [AnalyzerMessage] Undefined name 'isNotNull' (test/codegen/js_test.dart, line 172, col 17)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 175, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 178, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 180, col 7)
severe: [AnalyzerMessage] Undefined name 'isNotNull' (test/codegen/js_test.dart, line 180, col 17)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 181, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 182, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 185, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 187, col 7)
severe: [AnalyzerMessage] Undefined name 'isNotNull' (test/codegen/js_test.dart, line 187, col 17)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 188, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 191, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 192, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 195, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 198, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 200, col 7)
severe: [AnalyzerMessage] Undefined name 'isNotNull' (test/codegen/js_test.dart, line 200, col 39)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 203, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 206, col 9)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 208, col 7)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 212, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 214, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 216, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 219, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 220, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 223, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 225, col 7)
severe: [AnalyzerMessage] The method 'same' is not defined for the class 'Color' (test/codegen/js_test.dart, line 225, col 64)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 228, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 229, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 230, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 230, col 50)
severe: [AnalyzerMessage] Undefined name 'isNoSuchMethodError' (test/codegen/js_test.dart, line 230, col 58)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 233, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 234, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 238, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 239, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 240, col 7)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 245, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 247, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 250, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 251, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 254, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 257, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 260, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 261, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 264, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 266, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 269, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 270, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 274, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 276, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 279, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 280, col 7)
severe: [AnalyzerMessage] The method 'isNot' is not defined for the class 'Color' (test/codegen/js_test.dart, line 280, col 17)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 281, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 285, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 287, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 288, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 289, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 289, col 31)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 289, col 39)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 290, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 290, col 30)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 290, col 38)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 293, col 4)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 297, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 298, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 298, col 35)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 298, col 43)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 299, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 299, col 34)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 299, col 42)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 302, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 304, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 306, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 308, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 310, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 313, col 6)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 316, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 318, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 321, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 324, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 327, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 330, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 333, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 335, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 337, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 338, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 338, col 42)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 338, col 50)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 339, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 339, col 43)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 339, col 51)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 342, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 344, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 345, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 346, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 346, col 39)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 346, col 47)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 347, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 347, col 40)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 347, col 48)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 350, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 352, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 353, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 355, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 355, col 40)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 355, col 48)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 358, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 361, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 362, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 362, col 46)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 362, col 54)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 363, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 363, col 45)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 363, col 53)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 364, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 364, col 45)
severe: [AnalyzerMessage] Undefined name 'isRangeError' (test/codegen/js_test.dart, line 364, col 53)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 367, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 370, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 372, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 375, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 378, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 381, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 384, col 7)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 389, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 391, col 5)
severe: [AnalyzerMessage] Undefined name 'document' (test/codegen/js_test.dart, line 392, col 49)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 394, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 395, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 396, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 399, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 401, col 9)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 402, col 13)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 408, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 409, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 410, col 7)
severe: [AnalyzerMessage] Undefined name 'throws' (test/codegen/js_test.dart, line 410, col 58)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 413, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 418, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 419, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 423, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 429, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 432, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 435, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 439, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 442, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 445, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 448, col 7)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 454, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 456, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 459, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 460, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 462, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 466, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 469, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 470, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 472, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 476, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 479, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 481, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 485, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 495, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 496, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 497, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 498, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 499, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 500, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 501, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 504, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 505, col 7)
severe: [AnalyzerMessage] The method 'throwsA' is not defined for the class 'Color' (test/codegen/js_test.dart, line 506, col 11)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 510, col 3)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 512, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 515, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 516, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 518, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 521, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 523, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 525, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 528, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 530, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 531, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 534, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 536, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 537, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 538, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 541, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 544, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 545, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 547, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 550, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 553, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 554, col 7)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 557, col 5)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 559, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 560, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 562, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 563, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 567, col 7)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 572, col 3)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 574, col 5)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 576, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 578, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 581, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 582, col 9)
severe: [AnalyzerMessage] The name 'Window' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 582, col 37)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 585, col 7)
severe: [AnalyzerMessage] Undefined name 'document' (test/codegen/js_test.dart, line 586, col 22)
severe: [AnalyzerMessage] Undefined name 'document' (test/codegen/js_test.dart, line 587, col 9)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 592, col 9)
severe: [AnalyzerMessage] The method 'isNot' is not defined for the class 'Color' (test/codegen/js_test.dart, line 592, col 31)
severe: [AnalyzerMessage] The name 'Window' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 592, col 49)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 593, col 9)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 597, col 9)
severe: [AnalyzerMessage] The method 'isNot' is not defined for the class 'Color' (test/codegen/js_test.dart, line 597, col 28)
severe: [AnalyzerMessage] The name 'Node' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 597, col 46)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 598, col 9)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 603, col 11)
severe: [AnalyzerMessage] The method 'isNot' is not defined for the class 'Color' (test/codegen/js_test.dart, line 603, col 21)
severe: [AnalyzerMessage] The name 'Event' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 603, col 39)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 604, col 11)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 609, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 612, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 613, col 9)
severe: [AnalyzerMessage] The name 'Document' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 613, col 39)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 616, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 618, col 9)
severe: [AnalyzerMessage] The name 'Blob' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 618, col 24)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 619, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 622, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 624, col 9)
severe: [AnalyzerMessage] The name 'DivElement' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 624, col 24)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 627, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 629, col 9)
severe: [AnalyzerMessage] The name 'Event' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 629, col 25)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 632, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 634, col 9)
severe: [AnalyzerMessage] The name 'ImageData' is not defined and cannot be used in an 'is' expression (test/codegen/js_test.dart, line 634, col 24)
severe: [AnalyzerMessage] The method 'group' is not defined for the class 'Color' (test/codegen/js_test.dart, line 639, col 5)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 641, col 7)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 644, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 649, col 7)
severe: [AnalyzerMessage] Undefined name 'window' (test/codegen/js_test.dart, line 650, col 24)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 652, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 657, col 7)
severe: [AnalyzerMessage] Undefined name 'document' (test/codegen/js_test.dart, line 658, col 24)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 660, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 665, col 7)
severe: [AnalyzerMessage] Undefined class 'Blob' (test/codegen/js_test.dart, line 667, col 28)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 669, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 674, col 7)
severe: [AnalyzerMessage] Undefined name 'document' (test/codegen/js_test.dart, line 675, col 24)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 677, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 682, col 7)
severe: [AnalyzerMessage] Undefined class 'CustomEvent' (test/codegen/js_test.dart, line 683, col 28)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 685, col 9)
severe: [AnalyzerMessage] The method 'test' is not defined for the class 'Color' (test/codegen/js_test.dart, line 693, col 7)
severe: [AnalyzerMessage] Undefined class 'CanvasElement' (test/codegen/js_test.dart, line 694, col 9)
severe: [AnalyzerMessage] Undefined name 'document' (test/codegen/js_test.dart, line 694, col 32)
severe: [AnalyzerMessage] The name 'CanvasRenderingContext2D' is not a type and cannot be used in an 'as' expression (test/codegen/js_test.dart, line 695, col 46)
severe: [AnalyzerMessage] The method 'expect' is not defined for the class 'Color' (test/codegen/js_test.dart, line 698, col 9)
warning: [MissingTypeError] type analysis didn't compute the type of: new Blob(fileParts, type: 'text/html') InstanceCreationExpression (test/codegen/js_test.dart, line 667, col 24)
warning: [MissingTypeError] type analysis didn't compute the type of: new CustomEvent('test') InstanceCreationExpression (test/codegen/js_test.dart, line 683, col 24)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 16, col 43)
info: [DynamicCast] _proxy['a'] (dynamic) will need runtime check to cast to type num (test/codegen/js_test.dart, line 20, col 16)
info: [DynamicCast] _proxy.callMethod('bar') (dynamic) will need runtime check to cast to type num (test/codegen/js_test.dart, line 21, col 16)
info: [DynamicInvoke] group('identity', () {test('context instances should be identical', () {var c1 = context; var c2 = context; expect(identical(c1, c2), true);}); test('identical JS functions should have equal proxies', () {var f1 = context['Object']; var f2 = context['Object']; expect(f1, equals(f2));}); test('test proxy equality', () {var foo1 = new JsObject(context['Foo'], [1]); var foo2 = new JsObject(context['Foo'], [2]); context['foo1'] = foo1; context['foo2'] = foo2; expect(foo1, isNot(context['foo2'])); expect(foo2, context['foo2']); context.deleteProperty('foo1'); context.deleteProperty('foo2');}); test('retrieve same dart Object', () {final obj = new Object(); context['obj'] = obj; expect(context['obj'], same(obj)); context.deleteProperty('obj');}); group('caching', () {test('JS->Dart', () {final proto = context['someProto']; expect(proto['role'], 'proto'); final obj = context['someObject']; expect(obj['role'], 'object');});});}) requires dynamic invoke (test/codegen/js_test.dart, line 39, col 3)
info: [DynamicInvoke] test('context instances should be identical', () {var c1 = context; var c2 = context; expect(identical(c1, c2), true);}) requires dynamic invoke (test/codegen/js_test.dart, line 41, col 5)
info: [DynamicInvoke] expect(identical(c1, c2), true) requires dynamic invoke (test/codegen/js_test.dart, line 44, col 7)
info: [DynamicInvoke] test('identical JS functions should have equal proxies', () {var f1 = context['Object']; var f2 = context['Object']; expect(f1, equals(f2));}) requires dynamic invoke (test/codegen/js_test.dart, line 49, col 5)
info: [DynamicInvoke] expect(f1, equals(f2)) requires dynamic invoke (test/codegen/js_test.dart, line 52, col 7)
info: [DynamicInvoke] equals(f2) requires dynamic invoke (test/codegen/js_test.dart, line 52, col 18)
info: [DynamicInvoke] test('test proxy equality', () {var foo1 = new JsObject(context['Foo'], [1]); var foo2 = new JsObject(context['Foo'], [2]); context['foo1'] = foo1; context['foo2'] = foo2; expect(foo1, isNot(context['foo2'])); expect(foo2, context['foo2']); context.deleteProperty('foo1'); context.deleteProperty('foo2');}) requires dynamic invoke (test/codegen/js_test.dart, line 57, col 5)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 58, col 31)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 59, col 31)
info: [DynamicInvoke] expect(foo1, isNot(context['foo2'])) requires dynamic invoke (test/codegen/js_test.dart, line 62, col 7)
info: [DynamicInvoke] isNot(context['foo2']) requires dynamic invoke (test/codegen/js_test.dart, line 62, col 20)
info: [DynamicInvoke] expect(foo2, context['foo2']) requires dynamic invoke (test/codegen/js_test.dart, line 63, col 7)
info: [DynamicInvoke] test('retrieve same dart Object', () {final obj = new Object(); context['obj'] = obj; expect(context['obj'], same(obj)); context.deleteProperty('obj');}) requires dynamic invoke (test/codegen/js_test.dart, line 68, col 5)
info: [DynamicInvoke] expect(context['obj'], same(obj)) requires dynamic invoke (test/codegen/js_test.dart, line 71, col 7)
info: [DynamicInvoke] same(obj) requires dynamic invoke (test/codegen/js_test.dart, line 71, col 30)
info: [DynamicInvoke] group('caching', () {test('JS->Dart', () {final proto = context['someProto']; expect(proto['role'], 'proto'); final obj = context['someObject']; expect(obj['role'], 'object');});}) requires dynamic invoke (test/codegen/js_test.dart, line 75, col 5)
info: [DynamicInvoke] test('JS->Dart', () {final proto = context['someProto']; expect(proto['role'], 'proto'); final obj = context['someObject']; expect(obj['role'], 'object');}) requires dynamic invoke (test/codegen/js_test.dart, line 76, col 7)
info: [DynamicInvoke] expect(proto['role'], 'proto') requires dynamic invoke (test/codegen/js_test.dart, line 80, col 9)
info: [DynamicInvoke] proto['role'] requires dynamic invoke (test/codegen/js_test.dart, line 80, col 16)
info: [DynamicInvoke] expect(obj['role'], 'object') requires dynamic invoke (test/codegen/js_test.dart, line 82, col 9)
info: [DynamicInvoke] obj['role'] requires dynamic invoke (test/codegen/js_test.dart, line 82, col 16)
info: [DynamicInvoke] group('context', () {test('read global field', () {expect(context['x'], 42); expect(context['y'], null);}); test('read global field with underscore', () {expect(context['_x'], 123); expect(context['y'], null);}); test('write global field', () {context['y'] = 42; expect(context['y'], 42);});}) requires dynamic invoke (test/codegen/js_test.dart, line 88, col 3)
info: [DynamicInvoke] test('read global field', () {expect(context['x'], 42); expect(context['y'], null);}) requires dynamic invoke (test/codegen/js_test.dart, line 90, col 5)
info: [DynamicInvoke] expect(context['x'], 42) requires dynamic invoke (test/codegen/js_test.dart, line 91, col 7)
info: [DynamicInvoke] expect(context['y'], null) requires dynamic invoke (test/codegen/js_test.dart, line 92, col 7)
info: [DynamicInvoke] test('read global field with underscore', () {expect(context['_x'], 123); expect(context['y'], null);}) requires dynamic invoke (test/codegen/js_test.dart, line 95, col 5)
info: [DynamicInvoke] expect(context['_x'], 123) requires dynamic invoke (test/codegen/js_test.dart, line 96, col 7)
info: [DynamicInvoke] expect(context['y'], null) requires dynamic invoke (test/codegen/js_test.dart, line 97, col 7)
info: [DynamicInvoke] test('write global field', () {context['y'] = 42; expect(context['y'], 42);}) requires dynamic invoke (test/codegen/js_test.dart, line 100, col 5)
info: [DynamicInvoke] expect(context['y'], 42) requires dynamic invoke (test/codegen/js_test.dart, line 102, col 7)
info: [DynamicInvoke] group('new JsObject()', () {test('new Foo()', () {var foo = new JsObject(context['Foo'], [42]); expect(foo['a'], 42); expect(foo.callMethod('bar'), 42); expect(() => foo.callMethod('baz'), throwsA(isNoSuchMethodError));}); test('new container.Foo()', () {final Foo2 = context['container']['Foo']; final foo = new JsObject(Foo2, [42]); expect(foo['a'], 42); expect(Foo2['b'], 38);}); test('new Array()', () {var a = new JsObject(context['Array']); expect(a, (a) => a is JsArray); expect(a['length'], 0); a.callMethod('push', ["value 1"]); expect(a['length'], 1); expect(a[0], "value 1"); a.callMethod('pop'); expect(a['length'], 0);}); test('new Date()', () {final a = new JsObject(context['Date']); expect(a.callMethod('getTime'), isNotNull);}); test('new Date(12345678)', () {final a = new JsObject(context['Date'], [12345678]); expect(a.callMethod('getTime'), 12345678);}); test('new Date("December 17, 1995 03:24:00 GMT")', () {final a = new JsObject(context['Date'], ["December 17, 1995 03:24:00 GMT"]); expect(a.callMethod('getTime'), 819170640000);}); test('new Date(1995,11,17)', () {final a = new JsObject(context['Date'], [1995, 11, 17]); final b = new DateTime(1995, 12, 17); expect(a.callMethod('getTime'), b.millisecondsSinceEpoch);}); test('new Date(1995,11,17,3,24,0)', () {final a = new JsObject(context['Date'], [1995, 11, 17, 3, 24, 0]); final b = new DateTime(1995, 12, 17, 3, 24, 0); expect(a.callMethod('getTime'), b.millisecondsSinceEpoch);}); test('new Object()', () {final a = new JsObject(context['Object']); expect(a, isNotNull); a['attr'] = "value"; expect(a['attr'], "value");}); test(r'new RegExp("^\w+$")', () {final a = new JsObject(context['RegExp'], [r'^\w+$']); expect(a, isNotNull); expect(a.callMethod('test', ['true']), true); expect(a.callMethod('test', [' false']), false);}); test('js instantiation via map notation : new Array()', () {final a = new JsObject(context['Array']); expect(a, isNotNull); expect(a['length'], 0); a.callMethod('push', ["value 1"]); expect(a['length'], 1); expect(a[0], "value 1"); a.callMethod('pop'); expect(a['length'], 0);}); test('js instantiation via map notation : new Date()', () {final a = new JsObject(context['Date']); expect(a.callMethod('getTime'), isNotNull);}); test('>10 parameters', () {final o = new JsObject(context['Baz'], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]); for (var i = 1; i <= 11; i++) {expect(o["f$i"], i);} expect(o['constructor'], context['Baz']);});}) requires dynamic invoke (test/codegen/js_test.dart, line 107, col 3)
info: [DynamicInvoke] test('new Foo()', () {var foo = new JsObject(context['Foo'], [42]); expect(foo['a'], 42); expect(foo.callMethod('bar'), 42); expect(() => foo.callMethod('baz'), throwsA(isNoSuchMethodError));}) requires dynamic invoke (test/codegen/js_test.dart, line 109, col 5)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 110, col 30)
info: [DynamicInvoke] expect(foo['a'], 42) requires dynamic invoke (test/codegen/js_test.dart, line 111, col 7)
info: [DynamicInvoke] expect(foo.callMethod('bar'), 42) requires dynamic invoke (test/codegen/js_test.dart, line 112, col 7)
info: [DynamicInvoke] expect(() => foo.callMethod('baz'), throwsA(isNoSuchMethodError)) requires dynamic invoke (test/codegen/js_test.dart, line 113, col 7)
info: [DynamicInvoke] throwsA(isNoSuchMethodError) requires dynamic invoke (test/codegen/js_test.dart, line 113, col 43)
info: [DynamicInvoke] test('new container.Foo()', () {final Foo2 = context['container']['Foo']; final foo = new JsObject(Foo2, [42]); expect(foo['a'], 42); expect(Foo2['b'], 38);}) requires dynamic invoke (test/codegen/js_test.dart, line 116, col 5)
info: [DynamicInvoke] context['container']['Foo'] requires dynamic invoke (test/codegen/js_test.dart, line 117, col 20)
info: [DynamicCast] Foo2 (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 118, col 32)
info: [DynamicInvoke] expect(foo['a'], 42) requires dynamic invoke (test/codegen/js_test.dart, line 119, col 7)
info: [DynamicInvoke] expect(Foo2['b'], 38) requires dynamic invoke (test/codegen/js_test.dart, line 120, col 7)
info: [DynamicInvoke] Foo2['b'] requires dynamic invoke (test/codegen/js_test.dart, line 120, col 14)
info: [DynamicInvoke] test('new Array()', () {var a = new JsObject(context['Array']); expect(a, (a) => a is JsArray); expect(a['length'], 0); a.callMethod('push', ["value 1"]); expect(a['length'], 1); expect(a[0], "value 1"); a.callMethod('pop'); expect(a['length'], 0);}) requires dynamic invoke (test/codegen/js_test.dart, line 123, col 5)
info: [DynamicCast] context['Array'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 124, col 28)
info: [DynamicInvoke] expect(a, (a) => a is JsArray) requires dynamic invoke (test/codegen/js_test.dart, line 125, col 7)
info: [DynamicInvoke] expect(a['length'], 0) requires dynamic invoke (test/codegen/js_test.dart, line 129, col 7)
info: [DynamicInvoke] expect(a['length'], 1) requires dynamic invoke (test/codegen/js_test.dart, line 132, col 7)
info: [DynamicInvoke] expect(a[0], "value 1") requires dynamic invoke (test/codegen/js_test.dart, line 133, col 7)
info: [DynamicInvoke] expect(a['length'], 0) requires dynamic invoke (test/codegen/js_test.dart, line 136, col 7)
info: [DynamicInvoke] test('new Date()', () {final a = new JsObject(context['Date']); expect(a.callMethod('getTime'), isNotNull);}) requires dynamic invoke (test/codegen/js_test.dart, line 139, col 5)
info: [DynamicCast] context['Date'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 140, col 30)
info: [DynamicInvoke] expect(a.callMethod('getTime'), isNotNull) requires dynamic invoke (test/codegen/js_test.dart, line 141, col 7)
info: [DynamicInvoke] test('new Date(12345678)', () {final a = new JsObject(context['Date'], [12345678]); expect(a.callMethod('getTime'), 12345678);}) requires dynamic invoke (test/codegen/js_test.dart, line 144, col 5)
info: [DynamicCast] context['Date'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 145, col 30)
info: [DynamicInvoke] expect(a.callMethod('getTime'), 12345678) requires dynamic invoke (test/codegen/js_test.dart, line 146, col 7)
info: [DynamicInvoke] test('new Date("December 17, 1995 03:24:00 GMT")', () {final a = new JsObject(context['Date'], ["December 17, 1995 03:24:00 GMT"]); expect(a.callMethod('getTime'), 819170640000);}) requires dynamic invoke (test/codegen/js_test.dart, line 149, col 5)
info: [DynamicCast] context['Date'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 150, col 30)
info: [DynamicInvoke] expect(a.callMethod('getTime'), 819170640000) requires dynamic invoke (test/codegen/js_test.dart, line 152, col 7)
info: [DynamicInvoke] test('new Date(1995,11,17)', () {final a = new JsObject(context['Date'], [1995, 11, 17]); final b = new DateTime(1995, 12, 17); expect(a.callMethod('getTime'), b.millisecondsSinceEpoch);}) requires dynamic invoke (test/codegen/js_test.dart, line 155, col 5)
info: [DynamicCast] context['Date'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 157, col 30)
info: [DynamicInvoke] expect(a.callMethod('getTime'), b.millisecondsSinceEpoch) requires dynamic invoke (test/codegen/js_test.dart, line 159, col 7)
info: [DynamicInvoke] test('new Date(1995,11,17,3,24,0)', () {final a = new JsObject(context['Date'], [1995, 11, 17, 3, 24, 0]); final b = new DateTime(1995, 12, 17, 3, 24, 0); expect(a.callMethod('getTime'), b.millisecondsSinceEpoch);}) requires dynamic invoke (test/codegen/js_test.dart, line 162, col 5)
info: [DynamicCast] context['Date'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 164, col 30)
info: [DynamicInvoke] expect(a.callMethod('getTime'), b.millisecondsSinceEpoch) requires dynamic invoke (test/codegen/js_test.dart, line 167, col 7)
info: [DynamicInvoke] test('new Object()', () {final a = new JsObject(context['Object']); expect(a, isNotNull); a['attr'] = "value"; expect(a['attr'], "value");}) requires dynamic invoke (test/codegen/js_test.dart, line 170, col 5)
info: [DynamicCast] context['Object'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 171, col 30)
info: [DynamicInvoke] expect(a, isNotNull) requires dynamic invoke (test/codegen/js_test.dart, line 172, col 7)
info: [DynamicInvoke] expect(a['attr'], "value") requires dynamic invoke (test/codegen/js_test.dart, line 175, col 7)
info: [DynamicInvoke] test(r'new RegExp("^\w+$")', () {final a = new JsObject(context['RegExp'], [r'^\w+$']); expect(a, isNotNull); expect(a.callMethod('test', ['true']), true); expect(a.callMethod('test', [' false']), false);}) requires dynamic invoke (test/codegen/js_test.dart, line 178, col 5)
info: [DynamicCast] context['RegExp'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 179, col 30)
info: [DynamicInvoke] expect(a, isNotNull) requires dynamic invoke (test/codegen/js_test.dart, line 180, col 7)
info: [DynamicInvoke] expect(a.callMethod('test', ['true']), true) requires dynamic invoke (test/codegen/js_test.dart, line 181, col 7)
info: [DynamicInvoke] expect(a.callMethod('test', [' false']), false) requires dynamic invoke (test/codegen/js_test.dart, line 182, col 7)
info: [DynamicInvoke] test('js instantiation via map notation : new Array()', () {final a = new JsObject(context['Array']); expect(a, isNotNull); expect(a['length'], 0); a.callMethod('push', ["value 1"]); expect(a['length'], 1); expect(a[0], "value 1"); a.callMethod('pop'); expect(a['length'], 0);}) requires dynamic invoke (test/codegen/js_test.dart, line 185, col 5)
info: [DynamicCast] context['Array'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 186, col 30)
info: [DynamicInvoke] expect(a, isNotNull) requires dynamic invoke (test/codegen/js_test.dart, line 187, col 7)
info: [DynamicInvoke] expect(a['length'], 0) requires dynamic invoke (test/codegen/js_test.dart, line 188, col 7)
info: [DynamicInvoke] expect(a['length'], 1) requires dynamic invoke (test/codegen/js_test.dart, line 191, col 7)
info: [DynamicInvoke] expect(a[0], "value 1") requires dynamic invoke (test/codegen/js_test.dart, line 192, col 7)
info: [DynamicInvoke] expect(a['length'], 0) requires dynamic invoke (test/codegen/js_test.dart, line 195, col 7)
info: [DynamicInvoke] test('js instantiation via map notation : new Date()', () {final a = new JsObject(context['Date']); expect(a.callMethod('getTime'), isNotNull);}) requires dynamic invoke (test/codegen/js_test.dart, line 198, col 5)
info: [DynamicCast] context['Date'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 199, col 30)
info: [DynamicInvoke] expect(a.callMethod('getTime'), isNotNull) requires dynamic invoke (test/codegen/js_test.dart, line 200, col 7)
info: [DynamicInvoke] test('>10 parameters', () {final o = new JsObject(context['Baz'], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]); for (var i = 1; i <= 11; i++) {expect(o["f$i"], i);} expect(o['constructor'], context['Baz']);}) requires dynamic invoke (test/codegen/js_test.dart, line 203, col 5)
info: [DynamicCast] context['Baz'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 204, col 30)
info: [DynamicInvoke] expect(o["f$i"], i) requires dynamic invoke (test/codegen/js_test.dart, line 206, col 9)
info: [DynamicInvoke] expect(o['constructor'], context['Baz']) requires dynamic invoke (test/codegen/js_test.dart, line 208, col 7)
info: [DynamicInvoke] group('JsFunction and callMethod', () {test('new JsObject can return a JsFunction', () {var f = new JsObject(context['Function']); expect(f, (a) => a is JsFunction);}); test('JsFunction.apply on a function defined in JS', () {expect(context['razzle'].apply([]), 42);}); test('JsFunction.apply on a function that uses "this"', () {var object = new Object(); expect(context['returnThis'].apply([], thisArg: object), same(object));}); test('JsObject.callMethod on a function defined in JS', () {expect(context.callMethod('razzle'), 42); expect(() => context.callMethod('dazzle'), throwsA(isNoSuchMethodError));}); test('callMethod with many arguments', () {expect(context.callMethod('varArgs', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), 55);}); test('access a property of a function', () {expect(context.callMethod('Bar'), "ret_value"); expect(context['Bar']['foo'], "property_value");});}) requires dynamic invoke (test/codegen/js_test.dart, line 212, col 3)
info: [DynamicInvoke] test('new JsObject can return a JsFunction', () {var f = new JsObject(context['Function']); expect(f, (a) => a is JsFunction);}) requires dynamic invoke (test/codegen/js_test.dart, line 214, col 5)
info: [DynamicCast] context['Function'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 215, col 28)
info: [DynamicInvoke] expect(f, (a) => a is JsFunction) requires dynamic invoke (test/codegen/js_test.dart, line 216, col 7)
info: [DynamicInvoke] test('JsFunction.apply on a function defined in JS', () {expect(context['razzle'].apply([]), 42);}) requires dynamic invoke (test/codegen/js_test.dart, line 219, col 5)
info: [DynamicInvoke] expect(context['razzle'].apply([]), 42) requires dynamic invoke (test/codegen/js_test.dart, line 220, col 7)
info: [DynamicInvoke] context['razzle'].apply([]) requires dynamic invoke (test/codegen/js_test.dart, line 220, col 14)
info: [DynamicInvoke] test('JsFunction.apply on a function that uses "this"', () {var object = new Object(); expect(context['returnThis'].apply([], thisArg: object), same(object));}) requires dynamic invoke (test/codegen/js_test.dart, line 223, col 5)
info: [DynamicInvoke] expect(context['returnThis'].apply([], thisArg: object), same(object)) requires dynamic invoke (test/codegen/js_test.dart, line 225, col 7)
info: [DynamicInvoke] context['returnThis'].apply([], thisArg: object) requires dynamic invoke (test/codegen/js_test.dart, line 225, col 14)
info: [DynamicInvoke] same(object) requires dynamic invoke (test/codegen/js_test.dart, line 225, col 64)
info: [DynamicInvoke] test('JsObject.callMethod on a function defined in JS', () {expect(context.callMethod('razzle'), 42); expect(() => context.callMethod('dazzle'), throwsA(isNoSuchMethodError));}) requires dynamic invoke (test/codegen/js_test.dart, line 228, col 5)
info: [DynamicInvoke] expect(context.callMethod('razzle'), 42) requires dynamic invoke (test/codegen/js_test.dart, line 229, col 7)
info: [DynamicInvoke] expect(() => context.callMethod('dazzle'), throwsA(isNoSuchMethodError)) requires dynamic invoke (test/codegen/js_test.dart, line 230, col 7)
info: [DynamicInvoke] throwsA(isNoSuchMethodError) requires dynamic invoke (test/codegen/js_test.dart, line 230, col 50)
info: [DynamicInvoke] test('callMethod with many arguments', () {expect(context.callMethod('varArgs', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), 55);}) requires dynamic invoke (test/codegen/js_test.dart, line 233, col 5)
info: [DynamicInvoke] expect(context.callMethod('varArgs', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), 55) requires dynamic invoke (test/codegen/js_test.dart, line 234, col 7)
info: [DynamicInvoke] test('access a property of a function', () {expect(context.callMethod('Bar'), "ret_value"); expect(context['Bar']['foo'], "property_value");}) requires dynamic invoke (test/codegen/js_test.dart, line 238, col 5)
info: [DynamicInvoke] expect(context.callMethod('Bar'), "ret_value") requires dynamic invoke (test/codegen/js_test.dart, line 239, col 7)
info: [DynamicInvoke] expect(context['Bar']['foo'], "property_value") requires dynamic invoke (test/codegen/js_test.dart, line 240, col 7)
info: [DynamicInvoke] context['Bar']['foo'] requires dynamic invoke (test/codegen/js_test.dart, line 240, col 14)
info: [DynamicInvoke] group('JsArray', () {test('new JsArray()', () {var array = new JsArray(); var arrayType = context['Array']; expect(array.instanceof(arrayType), true); expect(array, []); array.addAll([1, 2, 3]); expect(array, [1, 2, 3]);}); test('new JsArray.from()', () {var array = new JsArray.from([1, 2, 3]); var arrayType = context['Array']; expect(array.instanceof(arrayType), true); expect(array, [1, 2, 3]);}); test('get Array from JS', () {context['a'] = new JsObject(context['Array'], [1, 2, 3]); expect(context.callMethod('isPropertyInstanceOf', ['a', context['Array']]), true); var a = context['a']; expect(a, (a) => a is JsArray); expect(a, [1, 2, 3]); context.deleteProperty('a');}); test('pass Array to JS', () {context['a'] = [1, 2, 3]; expect(context.callMethod('isPropertyInstanceOf', ['a', context['Array']]), false); var a = context['a']; expect(a, (a) => a is List); expect(a, isNot((a) => a is JsArray)); expect(a, [1, 2, 3]); context.deleteProperty('a');}); test('[]', () {var array = new JsArray.from([1, 2]); expect(array[0], 1); expect(array[1], 2); expect(() => array[-1], throwsA(isRangeError)); expect(() => array[2], throwsA(isRangeError));}); test('[]=', () {var array = new JsArray.from([1, 2]); array[0] = 'd'; array[1] = 'e'; expect(array, ['d', 'e']); expect(() => array[-1] = 3, throwsA(isRangeError)); expect(() => array[2] = 3, throwsA(isRangeError));}); test('length', () {var array = new JsArray.from([1, 2, 3]); expect(array.length, 3); array.add(4); expect(array.length, 4); array.length = 2; expect(array, [1, 2]); array.length = 3; expect(array, [1, 2, null]);}); test('add', () {var array = new JsArray(); array.add('a'); expect(array, ['a']); array.add('b'); expect(array, ['a', 'b']);}); test('addAll', () {var array = new JsArray(); array.addAll(['a', 'b']); expect(array, ['a', 'b']); array.addAll(new Set.from(['c'])); expect(array, ['a', 'b', 'c']);}); test('insert', () {var array = new JsArray.from([]); array.insert(0, 'b'); expect(array, ['b']); array.insert(0, 'a'); expect(array, ['a', 'b']); array.insert(2, 'c'); expect(array, ['a', 'b', 'c']); expect(() => array.insert(4, 'e'), throwsA(isRangeError)); expect(() => array.insert(-1, 'e'), throwsA(isRangeError));}); test('removeAt', () {var array = new JsArray.from(['a', 'b', 'c']); expect(array.removeAt(1), 'b'); expect(array, ['a', 'c']); expect(() => array.removeAt(2), throwsA(isRangeError)); expect(() => array.removeAt(-1), throwsA(isRangeError));}); test('removeLast', () {var array = new JsArray.from(['a', 'b', 'c']); expect(array.removeLast(), 'c'); expect(array, ['a', 'b']); array.length = 0; expect(() => array.removeLast(), throwsA(isRangeError));}); test('removeRange', () {var array = new JsArray.from(['a', 'b', 'c', 'd']); array.removeRange(1, 3); expect(array, ['a', 'd']); expect(() => array.removeRange(-1, 2), throwsA(isRangeError)); expect(() => array.removeRange(0, 3), throwsA(isRangeError)); expect(() => array.removeRange(2, 1), throwsA(isRangeError));}); test('setRange', () {var array = new JsArray.from(['a', 'b', 'c', 'd']); array.setRange(1, 3, ['e', 'f']); expect(array, ['a', 'e', 'f', 'd']); array.setRange(3, 4, ['g', 'h', 'i'], 1); expect(array, ['a', 'e', 'f', 'h']);}); test('sort', () {var array = new JsArray.from(['c', 'a', 'b']); array.sort(); expect(array, ['a', 'b', 'c']);}); test('sort with a Comparator', () {var array = new JsArray.from(['c', 'a', 'b']); array.sort((a, b) => -(a.compareTo(b))); expect(array, ['c', 'b', 'a']);});}) requires dynamic invoke (test/codegen/js_test.dart, line 245, col 3)
info: [DynamicInvoke] test('new JsArray()', () {var array = new JsArray(); var arrayType = context['Array']; expect(array.instanceof(arrayType), true); expect(array, []); array.addAll([1, 2, 3]); expect(array, [1, 2, 3]);}) requires dynamic invoke (test/codegen/js_test.dart, line 247, col 5)
info: [DynamicInvoke] expect(array.instanceof(arrayType), true) requires dynamic invoke (test/codegen/js_test.dart, line 250, col 7)
info: [DynamicCast] arrayType (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 250, col 31)
info: [DynamicInvoke] expect(array, []) requires dynamic invoke (test/codegen/js_test.dart, line 251, col 7)
info: [DynamicInvoke] expect(array, [1, 2, 3]) requires dynamic invoke (test/codegen/js_test.dart, line 254, col 7)
info: [DynamicInvoke] test('new JsArray.from()', () {var array = new JsArray.from([1, 2, 3]); var arrayType = context['Array']; expect(array.instanceof(arrayType), true); expect(array, [1, 2, 3]);}) requires dynamic invoke (test/codegen/js_test.dart, line 257, col 5)
info: [DynamicInvoke] expect(array.instanceof(arrayType), true) requires dynamic invoke (test/codegen/js_test.dart, line 260, col 7)
info: [DynamicCast] arrayType (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 260, col 31)
info: [DynamicInvoke] expect(array, [1, 2, 3]) requires dynamic invoke (test/codegen/js_test.dart, line 261, col 7)
info: [DynamicInvoke] test('get Array from JS', () {context['a'] = new JsObject(context['Array'], [1, 2, 3]); expect(context.callMethod('isPropertyInstanceOf', ['a', context['Array']]), true); var a = context['a']; expect(a, (a) => a is JsArray); expect(a, [1, 2, 3]); context.deleteProperty('a');}) requires dynamic invoke (test/codegen/js_test.dart, line 264, col 5)
info: [DynamicCast] context['Array'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 265, col 35)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['a', context['Array']]), true) requires dynamic invoke (test/codegen/js_test.dart, line 266, col 7)
info: [DynamicInvoke] expect(a, (a) => a is JsArray) requires dynamic invoke (test/codegen/js_test.dart, line 269, col 7)
info: [DynamicInvoke] expect(a, [1, 2, 3]) requires dynamic invoke (test/codegen/js_test.dart, line 270, col 7)
info: [DynamicInvoke] test('pass Array to JS', () {context['a'] = [1, 2, 3]; expect(context.callMethod('isPropertyInstanceOf', ['a', context['Array']]), false); var a = context['a']; expect(a, (a) => a is List); expect(a, isNot((a) => a is JsArray)); expect(a, [1, 2, 3]); context.deleteProperty('a');}) requires dynamic invoke (test/codegen/js_test.dart, line 274, col 5)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['a', context['Array']]), false) requires dynamic invoke (test/codegen/js_test.dart, line 276, col 7)
info: [DynamicInvoke] expect(a, (a) => a is List) requires dynamic invoke (test/codegen/js_test.dart, line 279, col 7)
info: [DynamicInvoke] expect(a, isNot((a) => a is JsArray)) requires dynamic invoke (test/codegen/js_test.dart, line 280, col 7)
info: [DynamicInvoke] isNot((a) => a is JsArray) requires dynamic invoke (test/codegen/js_test.dart, line 280, col 17)
info: [DynamicInvoke] expect(a, [1, 2, 3]) requires dynamic invoke (test/codegen/js_test.dart, line 281, col 7)
info: [DynamicInvoke] test('[]', () {var array = new JsArray.from([1, 2]); expect(array[0], 1); expect(array[1], 2); expect(() => array[-1], throwsA(isRangeError)); expect(() => array[2], throwsA(isRangeError));}) requires dynamic invoke (test/codegen/js_test.dart, line 285, col 5)
info: [DynamicInvoke] expect(array[0], 1) requires dynamic invoke (test/codegen/js_test.dart, line 287, col 7)
info: [DynamicInvoke] expect(array[1], 2) requires dynamic invoke (test/codegen/js_test.dart, line 288, col 7)
info: [DynamicInvoke] expect(() => array[-1], throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 289, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 289, col 31)
info: [DynamicInvoke] expect(() => array[2], throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 290, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 290, col 30)
info: [DynamicInvoke] test('[]=', () {var array = new JsArray.from([1, 2]); array[0] = 'd'; array[1] = 'e'; expect(array, ['d', 'e']); expect(() => array[-1] = 3, throwsA(isRangeError)); expect(() => array[2] = 3, throwsA(isRangeError));}) requires dynamic invoke (test/codegen/js_test.dart, line 293, col 4)
info: [DynamicInvoke] expect(array, ['d', 'e']) requires dynamic invoke (test/codegen/js_test.dart, line 297, col 7)
info: [DynamicInvoke] expect(() => array[-1] = 3, throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 298, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 298, col 35)
info: [DynamicInvoke] expect(() => array[2] = 3, throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 299, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 299, col 34)
info: [DynamicInvoke] test('length', () {var array = new JsArray.from([1, 2, 3]); expect(array.length, 3); array.add(4); expect(array.length, 4); array.length = 2; expect(array, [1, 2]); array.length = 3; expect(array, [1, 2, null]);}) requires dynamic invoke (test/codegen/js_test.dart, line 302, col 5)
info: [DynamicInvoke] expect(array.length, 3) requires dynamic invoke (test/codegen/js_test.dart, line 304, col 7)
info: [DynamicInvoke] expect(array.length, 4) requires dynamic invoke (test/codegen/js_test.dart, line 306, col 7)
info: [DynamicInvoke] expect(array, [1, 2]) requires dynamic invoke (test/codegen/js_test.dart, line 308, col 7)
info: [DynamicInvoke] expect(array, [1, 2, null]) requires dynamic invoke (test/codegen/js_test.dart, line 310, col 7)
info: [DynamicInvoke] test('add', () {var array = new JsArray(); array.add('a'); expect(array, ['a']); array.add('b'); expect(array, ['a', 'b']);}) requires dynamic invoke (test/codegen/js_test.dart, line 313, col 6)
info: [DynamicInvoke] expect(array, ['a']) requires dynamic invoke (test/codegen/js_test.dart, line 316, col 7)
info: [DynamicInvoke] expect(array, ['a', 'b']) requires dynamic invoke (test/codegen/js_test.dart, line 318, col 7)
info: [DynamicInvoke] test('addAll', () {var array = new JsArray(); array.addAll(['a', 'b']); expect(array, ['a', 'b']); array.addAll(new Set.from(['c'])); expect(array, ['a', 'b', 'c']);}) requires dynamic invoke (test/codegen/js_test.dart, line 321, col 5)
info: [DynamicInvoke] expect(array, ['a', 'b']) requires dynamic invoke (test/codegen/js_test.dart, line 324, col 7)
info: [DynamicInvoke] expect(array, ['a', 'b', 'c']) requires dynamic invoke (test/codegen/js_test.dart, line 327, col 7)
info: [DynamicInvoke] test('insert', () {var array = new JsArray.from([]); array.insert(0, 'b'); expect(array, ['b']); array.insert(0, 'a'); expect(array, ['a', 'b']); array.insert(2, 'c'); expect(array, ['a', 'b', 'c']); expect(() => array.insert(4, 'e'), throwsA(isRangeError)); expect(() => array.insert(-1, 'e'), throwsA(isRangeError));}) requires dynamic invoke (test/codegen/js_test.dart, line 330, col 5)
info: [DynamicInvoke] expect(array, ['b']) requires dynamic invoke (test/codegen/js_test.dart, line 333, col 7)
info: [DynamicInvoke] expect(array, ['a', 'b']) requires dynamic invoke (test/codegen/js_test.dart, line 335, col 7)
info: [DynamicInvoke] expect(array, ['a', 'b', 'c']) requires dynamic invoke (test/codegen/js_test.dart, line 337, col 7)
info: [DynamicInvoke] expect(() => array.insert(4, 'e'), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 338, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 338, col 42)
info: [DynamicInvoke] expect(() => array.insert(-1, 'e'), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 339, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 339, col 43)
info: [DynamicInvoke] test('removeAt', () {var array = new JsArray.from(['a', 'b', 'c']); expect(array.removeAt(1), 'b'); expect(array, ['a', 'c']); expect(() => array.removeAt(2), throwsA(isRangeError)); expect(() => array.removeAt(-1), throwsA(isRangeError));}) requires dynamic invoke (test/codegen/js_test.dart, line 342, col 5)
info: [DynamicInvoke] expect(array.removeAt(1), 'b') requires dynamic invoke (test/codegen/js_test.dart, line 344, col 7)
info: [DynamicInvoke] expect(array, ['a', 'c']) requires dynamic invoke (test/codegen/js_test.dart, line 345, col 7)
info: [DynamicInvoke] expect(() => array.removeAt(2), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 346, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 346, col 39)
info: [DynamicInvoke] expect(() => array.removeAt(-1), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 347, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 347, col 40)
info: [DynamicInvoke] test('removeLast', () {var array = new JsArray.from(['a', 'b', 'c']); expect(array.removeLast(), 'c'); expect(array, ['a', 'b']); array.length = 0; expect(() => array.removeLast(), throwsA(isRangeError));}) requires dynamic invoke (test/codegen/js_test.dart, line 350, col 5)
info: [DynamicInvoke] expect(array.removeLast(), 'c') requires dynamic invoke (test/codegen/js_test.dart, line 352, col 7)
info: [DynamicInvoke] expect(array, ['a', 'b']) requires dynamic invoke (test/codegen/js_test.dart, line 353, col 7)
info: [DynamicInvoke] expect(() => array.removeLast(), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 355, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 355, col 40)
info: [DynamicInvoke] test('removeRange', () {var array = new JsArray.from(['a', 'b', 'c', 'd']); array.removeRange(1, 3); expect(array, ['a', 'd']); expect(() => array.removeRange(-1, 2), throwsA(isRangeError)); expect(() => array.removeRange(0, 3), throwsA(isRangeError)); expect(() => array.removeRange(2, 1), throwsA(isRangeError));}) requires dynamic invoke (test/codegen/js_test.dart, line 358, col 5)
info: [DynamicInvoke] expect(array, ['a', 'd']) requires dynamic invoke (test/codegen/js_test.dart, line 361, col 7)
info: [DynamicInvoke] expect(() => array.removeRange(-1, 2), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 362, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 362, col 46)
info: [DynamicInvoke] expect(() => array.removeRange(0, 3), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 363, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 363, col 45)
info: [DynamicInvoke] expect(() => array.removeRange(2, 1), throwsA(isRangeError)) requires dynamic invoke (test/codegen/js_test.dart, line 364, col 7)
info: [DynamicInvoke] throwsA(isRangeError) requires dynamic invoke (test/codegen/js_test.dart, line 364, col 45)
info: [DynamicInvoke] test('setRange', () {var array = new JsArray.from(['a', 'b', 'c', 'd']); array.setRange(1, 3, ['e', 'f']); expect(array, ['a', 'e', 'f', 'd']); array.setRange(3, 4, ['g', 'h', 'i'], 1); expect(array, ['a', 'e', 'f', 'h']);}) requires dynamic invoke (test/codegen/js_test.dart, line 367, col 5)
info: [DynamicInvoke] expect(array, ['a', 'e', 'f', 'd']) requires dynamic invoke (test/codegen/js_test.dart, line 370, col 7)
info: [DynamicInvoke] expect(array, ['a', 'e', 'f', 'h']) requires dynamic invoke (test/codegen/js_test.dart, line 372, col 7)
info: [DynamicInvoke] test('sort', () {var array = new JsArray.from(['c', 'a', 'b']); array.sort(); expect(array, ['a', 'b', 'c']);}) requires dynamic invoke (test/codegen/js_test.dart, line 375, col 5)
info: [DynamicInvoke] expect(array, ['a', 'b', 'c']) requires dynamic invoke (test/codegen/js_test.dart, line 378, col 7)
info: [DynamicInvoke] test('sort with a Comparator', () {var array = new JsArray.from(['c', 'a', 'b']); array.sort((a, b) => -(a.compareTo(b))); expect(array, ['c', 'b', 'a']);}) requires dynamic invoke (test/codegen/js_test.dart, line 381, col 5)
info: [InferredTypeClosure] (a, b) => -(a.compareTo(b)) has inferred type (dynamic, dynamic) → int (test/codegen/js_test.dart, line 383, col 18)
info: [DynamicInvoke] -(a.compareTo(b)) requires dynamic invoke (test/codegen/js_test.dart, line 383, col 28)
info: [DynamicInvoke] a.compareTo(b) requires dynamic invoke (test/codegen/js_test.dart, line 383, col 30)
info: [DynamicInvoke] expect(array, ['c', 'b', 'a']) requires dynamic invoke (test/codegen/js_test.dart, line 384, col 7)
info: [DynamicInvoke] group('JsObject.fromBrowserObject()', () {test('Nodes are proxied', () {var node = new JsObject.fromBrowserObject(document.createElement('div')); context.callMethod('addTestProperty', [node]); expect(node is JsObject, true); expect(node.instanceof(context['HTMLDivElement']), true); expect(node['testProperty'], 'test');}); test('primitives and null throw ArgumentError', () {for (var v in ['a', 1, 2.0, true, null]) {expect(() => new JsObject.fromBrowserObject(v), throwsA((a) => a is ArgumentError));}});}) requires dynamic invoke (test/codegen/js_test.dart, line 389, col 3)
info: [DynamicInvoke] test('Nodes are proxied', () {var node = new JsObject.fromBrowserObject(document.createElement('div')); context.callMethod('addTestProperty', [node]); expect(node is JsObject, true); expect(node.instanceof(context['HTMLDivElement']), true); expect(node['testProperty'], 'test');}) requires dynamic invoke (test/codegen/js_test.dart, line 391, col 5)
info: [DynamicInvoke] document.createElement('div') requires dynamic invoke (test/codegen/js_test.dart, line 392, col 49)
info: [DynamicInvoke] expect(node is JsObject, true) requires dynamic invoke (test/codegen/js_test.dart, line 394, col 7)
info: [DynamicInvoke] expect(node.instanceof(context['HTMLDivElement']), true) requires dynamic invoke (test/codegen/js_test.dart, line 395, col 7)
info: [DynamicCast] context['HTMLDivElement'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 395, col 30)
info: [DynamicInvoke] expect(node['testProperty'], 'test') requires dynamic invoke (test/codegen/js_test.dart, line 396, col 7)
info: [DynamicInvoke] test('primitives and null throw ArgumentError', () {for (var v in ['a', 1, 2.0, true, null]) {expect(() => new JsObject.fromBrowserObject(v), throwsA((a) => a is ArgumentError));}}) requires dynamic invoke (test/codegen/js_test.dart, line 399, col 5)
info: [DynamicInvoke] expect(() => new JsObject.fromBrowserObject(v), throwsA((a) => a is ArgumentError)) requires dynamic invoke (test/codegen/js_test.dart, line 401, col 9)
info: [DynamicInvoke] throwsA((a) => a is ArgumentError) requires dynamic invoke (test/codegen/js_test.dart, line 402, col 13)
info: [DynamicInvoke] group('Dart functions', () {test('invoke Dart callback from JS', () {expect(() => context.callMethod('invokeCallback'), throws); context['callback'] = () => 42; expect(context.callMethod('invokeCallback'), 42); context.deleteProperty('callback');}); test('callback as parameter', () {expect(context.callMethod('getTypeOf', [context['razzle']]), "function");}); test('invoke Dart callback from JS with this', () {final constructor = new JsFunction.withThis(($this, arg1) {$this['a'] = 42;}); var o = new JsObject(constructor, ["b"]); expect(o['a'], 42);}); test('invoke Dart callback from JS with 11 parameters', () {context['callbackWith11params'] = (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) => '$p1$p2$p3$p4$p5$p6$p7$p8$p9$p10$p11'; expect(context.callMethod('invokeCallbackWith11params'), '1234567891011');}); test('return a JS proxy to JavaScript', () {var result = context.callMethod('testJsMap', [() => new JsObject.jsify({'value' : 42})]); expect(result, 42);}); test('emulated functions should be callable in JS', () {context['callable'] = new Callable(); var result = context.callMethod('callable'); expect(result, 'called'); context.deleteProperty('callable');}, skip: "https://github.com/dart-lang/dev_compiler/issues/244");}) requires dynamic invoke (test/codegen/js_test.dart, line 408, col 3)
info: [DynamicInvoke] test('invoke Dart callback from JS', () {expect(() => context.callMethod('invokeCallback'), throws); context['callback'] = () => 42; expect(context.callMethod('invokeCallback'), 42); context.deleteProperty('callback');}) requires dynamic invoke (test/codegen/js_test.dart, line 409, col 5)
info: [DynamicInvoke] expect(() => context.callMethod('invokeCallback'), throws) requires dynamic invoke (test/codegen/js_test.dart, line 410, col 7)
info: [DynamicInvoke] expect(context.callMethod('invokeCallback'), 42) requires dynamic invoke (test/codegen/js_test.dart, line 413, col 7)
info: [DynamicInvoke] test('callback as parameter', () {expect(context.callMethod('getTypeOf', [context['razzle']]), "function");}) requires dynamic invoke (test/codegen/js_test.dart, line 418, col 5)
info: [DynamicInvoke] expect(context.callMethod('getTypeOf', [context['razzle']]), "function") requires dynamic invoke (test/codegen/js_test.dart, line 419, col 7)
info: [DynamicInvoke] test('invoke Dart callback from JS with this', () {final constructor = new JsFunction.withThis(($this, arg1) {$this['a'] = 42;}); var o = new JsObject(constructor, ["b"]); expect(o['a'], 42);}) requires dynamic invoke (test/codegen/js_test.dart, line 423, col 5)
info: [DynamicInvoke] $this['a'] requires dynamic invoke (test/codegen/js_test.dart, line 426, col 9)
info: [DynamicInvoke] expect(o['a'], 42) requires dynamic invoke (test/codegen/js_test.dart, line 429, col 7)
info: [DynamicInvoke] test('invoke Dart callback from JS with 11 parameters', () {context['callbackWith11params'] = (p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) => '$p1$p2$p3$p4$p5$p6$p7$p8$p9$p10$p11'; expect(context.callMethod('invokeCallbackWith11params'), '1234567891011');}) requires dynamic invoke (test/codegen/js_test.dart, line 432, col 5)
info: [DynamicInvoke] expect(context.callMethod('invokeCallbackWith11params'), '1234567891011') requires dynamic invoke (test/codegen/js_test.dart, line 435, col 7)
info: [DynamicInvoke] test('return a JS proxy to JavaScript', () {var result = context.callMethod('testJsMap', [() => new JsObject.jsify({'value' : 42})]); expect(result, 42);}) requires dynamic invoke (test/codegen/js_test.dart, line 439, col 5)
info: [DynamicInvoke] expect(result, 42) requires dynamic invoke (test/codegen/js_test.dart, line 442, col 7)
info: [DynamicInvoke] test('emulated functions should be callable in JS', () {context['callable'] = new Callable(); var result = context.callMethod('callable'); expect(result, 'called'); context.deleteProperty('callable');}, skip: "https://github.com/dart-lang/dev_compiler/issues/244") requires dynamic invoke (test/codegen/js_test.dart, line 445, col 5)
info: [DynamicInvoke] expect(result, 'called') requires dynamic invoke (test/codegen/js_test.dart, line 448, col 7)
info: [DynamicInvoke] group('JsObject.jsify()', () {test('convert a List', () {final list = [1, 2, 3, 4, 5, 6, 7, 8]; var array = new JsObject.jsify(list); expect(context.callMethod('isArray', [array]), true); expect(array['length'], list.length); for (var i = 0; i < list.length; i++) {expect(array[i], list[i]);}}); test('convert an Iterable', () {final set = new Set.from([1, 2, 3, 4, 5, 6, 7, 8]); var array = new JsObject.jsify(set); expect(context.callMethod('isArray', [array]), true); expect(array['length'], set.length); for (var i = 0; i < array['length']; i++) {expect(set.contains(array[i]), true);}}); test('convert a Map', () {var map = {'a' : 1, 'b' : 2, 'c' : 3}; var jsMap = new JsObject.jsify(map); expect(!context.callMethod('isArray', [jsMap]), true); for (final key in map.keys) {expect(context.callMethod('checkMap', [jsMap, key, map[key]]), true);}}); test('deep convert a complex object', () {final object = {'a' : [1, [2, 3]], 'b' : {'c' : 3, 'd' : new JsObject(context['Foo'], [42])}, 'e' : null}; var jsObject = new JsObject.jsify(object); expect(jsObject['a'][0], object['a'][0]); expect(jsObject['a'][1][0], object['a'][1][0]); expect(jsObject['a'][1][1], object['a'][1][1]); expect(jsObject['b']['c'], object['b']['c']); expect(jsObject['b']['d'], object['b']['d']); expect(jsObject['b']['d'].callMethod('bar'), 42); expect(jsObject['e'], null);}); test('throws if object is not a Map or Iterable', () {expect(() => new JsObject.jsify('a'), throwsA((a) => a is ArgumentError));});}) requires dynamic invoke (test/codegen/js_test.dart, line 454, col 3)
info: [DynamicInvoke] test('convert a List', () {final list = [1, 2, 3, 4, 5, 6, 7, 8]; var array = new JsObject.jsify(list); expect(context.callMethod('isArray', [array]), true); expect(array['length'], list.length); for (var i = 0; i < list.length; i++) {expect(array[i], list[i]);}}) requires dynamic invoke (test/codegen/js_test.dart, line 456, col 5)
info: [DynamicInvoke] expect(context.callMethod('isArray', [array]), true) requires dynamic invoke (test/codegen/js_test.dart, line 459, col 7)
info: [DynamicInvoke] expect(array['length'], list.length) requires dynamic invoke (test/codegen/js_test.dart, line 460, col 7)
info: [DynamicInvoke] expect(array[i], list[i]) requires dynamic invoke (test/codegen/js_test.dart, line 462, col 9)
info: [DynamicInvoke] test('convert an Iterable', () {final set = new Set.from([1, 2, 3, 4, 5, 6, 7, 8]); var array = new JsObject.jsify(set); expect(context.callMethod('isArray', [array]), true); expect(array['length'], set.length); for (var i = 0; i < array['length']; i++) {expect(set.contains(array[i]), true);}}) requires dynamic invoke (test/codegen/js_test.dart, line 466, col 5)
info: [DynamicInvoke] expect(context.callMethod('isArray', [array]), true) requires dynamic invoke (test/codegen/js_test.dart, line 469, col 7)
info: [DynamicInvoke] expect(array['length'], set.length) requires dynamic invoke (test/codegen/js_test.dart, line 470, col 7)
info: [DynamicCast] array['length'] (dynamic) will need runtime check to cast to type num (test/codegen/js_test.dart, line 471, col 27)
info: [DynamicInvoke] expect(set.contains(array[i]), true) requires dynamic invoke (test/codegen/js_test.dart, line 472, col 9)
info: [DynamicInvoke] test('convert a Map', () {var map = {'a' : 1, 'b' : 2, 'c' : 3}; var jsMap = new JsObject.jsify(map); expect(!context.callMethod('isArray', [jsMap]), true); for (final key in map.keys) {expect(context.callMethod('checkMap', [jsMap, key, map[key]]), true);}}) requires dynamic invoke (test/codegen/js_test.dart, line 476, col 5)
info: [DynamicInvoke] expect(!context.callMethod('isArray', [jsMap]), true) requires dynamic invoke (test/codegen/js_test.dart, line 479, col 7)
info: [DynamicCast] context.callMethod('isArray', [jsMap]) (dynamic) will need runtime check to cast to type bool (test/codegen/js_test.dart, line 479, col 15)
info: [DynamicInvoke] expect(context.callMethod('checkMap', [jsMap, key, map[key]]), true) requires dynamic invoke (test/codegen/js_test.dart, line 481, col 9)
info: [DynamicInvoke] test('deep convert a complex object', () {final object = {'a' : [1, [2, 3]], 'b' : {'c' : 3, 'd' : new JsObject(context['Foo'], [42])}, 'e' : null}; var jsObject = new JsObject.jsify(object); expect(jsObject['a'][0], object['a'][0]); expect(jsObject['a'][1][0], object['a'][1][0]); expect(jsObject['a'][1][1], object['a'][1][1]); expect(jsObject['b']['c'], object['b']['c']); expect(jsObject['b']['d'], object['b']['d']); expect(jsObject['b']['d'].callMethod('bar'), 42); expect(jsObject['e'], null);}) requires dynamic invoke (test/codegen/js_test.dart, line 485, col 5)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 490, col 29)
info: [DynamicInvoke] expect(jsObject['a'][0], object['a'][0]) requires dynamic invoke (test/codegen/js_test.dart, line 495, col 7)
info: [DynamicInvoke] jsObject['a'][0] requires dynamic invoke (test/codegen/js_test.dart, line 495, col 14)
info: [DynamicInvoke] object['a'][0] requires dynamic invoke (test/codegen/js_test.dart, line 495, col 32)
info: [DynamicInvoke] expect(jsObject['a'][1][0], object['a'][1][0]) requires dynamic invoke (test/codegen/js_test.dart, line 496, col 7)
info: [DynamicInvoke] jsObject['a'][1][0] requires dynamic invoke (test/codegen/js_test.dart, line 496, col 14)
info: [DynamicInvoke] jsObject['a'][1] requires dynamic invoke (test/codegen/js_test.dart, line 496, col 14)
info: [DynamicInvoke] object['a'][1][0] requires dynamic invoke (test/codegen/js_test.dart, line 496, col 35)
info: [DynamicInvoke] object['a'][1] requires dynamic invoke (test/codegen/js_test.dart, line 496, col 35)
info: [DynamicInvoke] expect(jsObject['a'][1][1], object['a'][1][1]) requires dynamic invoke (test/codegen/js_test.dart, line 497, col 7)
info: [DynamicInvoke] jsObject['a'][1][1] requires dynamic invoke (test/codegen/js_test.dart, line 497, col 14)
info: [DynamicInvoke] jsObject['a'][1] requires dynamic invoke (test/codegen/js_test.dart, line 497, col 14)
info: [DynamicInvoke] object['a'][1][1] requires dynamic invoke (test/codegen/js_test.dart, line 497, col 35)
info: [DynamicInvoke] object['a'][1] requires dynamic invoke (test/codegen/js_test.dart, line 497, col 35)
info: [DynamicInvoke] expect(jsObject['b']['c'], object['b']['c']) requires dynamic invoke (test/codegen/js_test.dart, line 498, col 7)
info: [DynamicInvoke] jsObject['b']['c'] requires dynamic invoke (test/codegen/js_test.dart, line 498, col 14)
info: [DynamicInvoke] object['b']['c'] requires dynamic invoke (test/codegen/js_test.dart, line 498, col 34)
info: [DynamicInvoke] expect(jsObject['b']['d'], object['b']['d']) requires dynamic invoke (test/codegen/js_test.dart, line 499, col 7)
info: [DynamicInvoke] jsObject['b']['d'] requires dynamic invoke (test/codegen/js_test.dart, line 499, col 14)
info: [DynamicInvoke] object['b']['d'] requires dynamic invoke (test/codegen/js_test.dart, line 499, col 34)
info: [DynamicInvoke] expect(jsObject['b']['d'].callMethod('bar'), 42) requires dynamic invoke (test/codegen/js_test.dart, line 500, col 7)
info: [DynamicInvoke] jsObject['b']['d'].callMethod('bar') requires dynamic invoke (test/codegen/js_test.dart, line 500, col 14)
info: [DynamicInvoke] jsObject['b']['d'] requires dynamic invoke (test/codegen/js_test.dart, line 500, col 14)
info: [DynamicInvoke] expect(jsObject['e'], null) requires dynamic invoke (test/codegen/js_test.dart, line 501, col 7)
info: [DynamicInvoke] test('throws if object is not a Map or Iterable', () {expect(() => new JsObject.jsify('a'), throwsA((a) => a is ArgumentError));}) requires dynamic invoke (test/codegen/js_test.dart, line 504, col 5)
info: [DynamicInvoke] expect(() => new JsObject.jsify('a'), throwsA((a) => a is ArgumentError)) requires dynamic invoke (test/codegen/js_test.dart, line 505, col 7)
info: [DynamicInvoke] throwsA((a) => a is ArgumentError) requires dynamic invoke (test/codegen/js_test.dart, line 506, col 11)
info: [DynamicInvoke] group('JsObject methods', () {test('hashCode and ==', () {final o1 = context['Object']; final o2 = context['Object']; expect(o1 == o2, true); expect(o1.hashCode == o2.hashCode, true); final d = context['document']; expect(o1 == d, false);}); test('toString', () {var foo = new JsObject(context['Foo'], [42]); expect(foo.toString(), "I'm a Foo a=42"); var container = context['container']; expect(container.toString(), "[object Object]");}); test('toString returns a String even if the JS object does not', () {var foo = new JsObject(context['Liar']); expect(foo.callMethod('toString'), 1); expect(foo.toString(), '1');}); test('instanceof', () {var foo = new JsObject(context['Foo'], [1]); expect(foo.instanceof(context['Foo']), true); expect(foo.instanceof(context['Object']), true); expect(foo.instanceof(context['String']), false);}); test('deleteProperty', () {var object = new JsObject.jsify({}); object['a'] = 1; expect(context['Object'].callMethod('keys', [object])['length'], 1); expect(context['Object'].callMethod('keys', [object])[0], "a"); object.deleteProperty("a"); expect(context['Object'].callMethod('keys', [object])['length'], 0);}); test('hasProperty', () {var object = new JsObject.jsify({}); object['a'] = 1; expect(object.hasProperty('a'), true); expect(object.hasProperty('b'), false);}); test('[] and []=', () {final myArray = context['myArray']; expect(myArray['length'], 1); expect(myArray[0], "value1"); myArray[0] = "value2"; expect(myArray['length'], 1); expect(myArray[0], "value2"); final foo = new JsObject(context['Foo'], [1]); foo["getAge"] = () => 10; expect(foo.callMethod('getAge'), 10);});}) requires dynamic invoke (test/codegen/js_test.dart, line 510, col 3)
info: [DynamicInvoke] test('hashCode and ==', () {final o1 = context['Object']; final o2 = context['Object']; expect(o1 == o2, true); expect(o1.hashCode == o2.hashCode, true); final d = context['document']; expect(o1 == d, false);}) requires dynamic invoke (test/codegen/js_test.dart, line 512, col 5)
info: [DynamicInvoke] expect(o1 == o2, true) requires dynamic invoke (test/codegen/js_test.dart, line 515, col 7)
info: [DynamicInvoke] expect(o1.hashCode == o2.hashCode, true) requires dynamic invoke (test/codegen/js_test.dart, line 516, col 7)
info: [DynamicInvoke] expect(o1 == d, false) requires dynamic invoke (test/codegen/js_test.dart, line 518, col 7)
info: [DynamicInvoke] test('toString', () {var foo = new JsObject(context['Foo'], [42]); expect(foo.toString(), "I'm a Foo a=42"); var container = context['container']; expect(container.toString(), "[object Object]");}) requires dynamic invoke (test/codegen/js_test.dart, line 521, col 5)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 522, col 30)
info: [DynamicInvoke] expect(foo.toString(), "I'm a Foo a=42") requires dynamic invoke (test/codegen/js_test.dart, line 523, col 7)
info: [DynamicInvoke] expect(container.toString(), "[object Object]") requires dynamic invoke (test/codegen/js_test.dart, line 525, col 7)
info: [DynamicInvoke] test('toString returns a String even if the JS object does not', () {var foo = new JsObject(context['Liar']); expect(foo.callMethod('toString'), 1); expect(foo.toString(), '1');}) requires dynamic invoke (test/codegen/js_test.dart, line 528, col 5)
info: [DynamicCast] context['Liar'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 529, col 30)
info: [DynamicInvoke] expect(foo.callMethod('toString'), 1) requires dynamic invoke (test/codegen/js_test.dart, line 530, col 7)
info: [DynamicInvoke] expect(foo.toString(), '1') requires dynamic invoke (test/codegen/js_test.dart, line 531, col 7)
info: [DynamicInvoke] test('instanceof', () {var foo = new JsObject(context['Foo'], [1]); expect(foo.instanceof(context['Foo']), true); expect(foo.instanceof(context['Object']), true); expect(foo.instanceof(context['String']), false);}) requires dynamic invoke (test/codegen/js_test.dart, line 534, col 5)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 535, col 30)
info: [DynamicInvoke] expect(foo.instanceof(context['Foo']), true) requires dynamic invoke (test/codegen/js_test.dart, line 536, col 7)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 536, col 29)
info: [DynamicInvoke] expect(foo.instanceof(context['Object']), true) requires dynamic invoke (test/codegen/js_test.dart, line 537, col 7)
info: [DynamicCast] context['Object'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 537, col 29)
info: [DynamicInvoke] expect(foo.instanceof(context['String']), false) requires dynamic invoke (test/codegen/js_test.dart, line 538, col 7)
info: [DynamicCast] context['String'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 538, col 29)
info: [DynamicInvoke] test('deleteProperty', () {var object = new JsObject.jsify({}); object['a'] = 1; expect(context['Object'].callMethod('keys', [object])['length'], 1); expect(context['Object'].callMethod('keys', [object])[0], "a"); object.deleteProperty("a"); expect(context['Object'].callMethod('keys', [object])['length'], 0);}) requires dynamic invoke (test/codegen/js_test.dart, line 541, col 5)
info: [DynamicInvoke] expect(context['Object'].callMethod('keys', [object])['length'], 1) requires dynamic invoke (test/codegen/js_test.dart, line 544, col 7)
info: [DynamicInvoke] context['Object'].callMethod('keys', [object])['length'] requires dynamic invoke (test/codegen/js_test.dart, line 544, col 14)
info: [DynamicInvoke] context['Object'].callMethod('keys', [object]) requires dynamic invoke (test/codegen/js_test.dart, line 544, col 14)
info: [DynamicInvoke] expect(context['Object'].callMethod('keys', [object])[0], "a") requires dynamic invoke (test/codegen/js_test.dart, line 545, col 7)
info: [DynamicInvoke] context['Object'].callMethod('keys', [object])[0] requires dynamic invoke (test/codegen/js_test.dart, line 545, col 14)
info: [DynamicInvoke] context['Object'].callMethod('keys', [object]) requires dynamic invoke (test/codegen/js_test.dart, line 545, col 14)
info: [DynamicInvoke] expect(context['Object'].callMethod('keys', [object])['length'], 0) requires dynamic invoke (test/codegen/js_test.dart, line 547, col 7)
info: [DynamicInvoke] context['Object'].callMethod('keys', [object])['length'] requires dynamic invoke (test/codegen/js_test.dart, line 547, col 14)
info: [DynamicInvoke] context['Object'].callMethod('keys', [object]) requires dynamic invoke (test/codegen/js_test.dart, line 547, col 14)
info: [DynamicInvoke] test('hasProperty', () {var object = new JsObject.jsify({}); object['a'] = 1; expect(object.hasProperty('a'), true); expect(object.hasProperty('b'), false);}) requires dynamic invoke (test/codegen/js_test.dart, line 550, col 5)
info: [DynamicInvoke] expect(object.hasProperty('a'), true) requires dynamic invoke (test/codegen/js_test.dart, line 553, col 7)
info: [DynamicInvoke] expect(object.hasProperty('b'), false) requires dynamic invoke (test/codegen/js_test.dart, line 554, col 7)
info: [DynamicInvoke] test('[] and []=', () {final myArray = context['myArray']; expect(myArray['length'], 1); expect(myArray[0], "value1"); myArray[0] = "value2"; expect(myArray['length'], 1); expect(myArray[0], "value2"); final foo = new JsObject(context['Foo'], [1]); foo["getAge"] = () => 10; expect(foo.callMethod('getAge'), 10);}) requires dynamic invoke (test/codegen/js_test.dart, line 557, col 5)
info: [DynamicInvoke] expect(myArray['length'], 1) requires dynamic invoke (test/codegen/js_test.dart, line 559, col 7)
info: [DynamicInvoke] myArray['length'] requires dynamic invoke (test/codegen/js_test.dart, line 559, col 14)
info: [DynamicInvoke] expect(myArray[0], "value1") requires dynamic invoke (test/codegen/js_test.dart, line 560, col 7)
info: [DynamicInvoke] myArray[0] requires dynamic invoke (test/codegen/js_test.dart, line 560, col 14)
info: [DynamicInvoke] myArray[0] requires dynamic invoke (test/codegen/js_test.dart, line 561, col 7)
info: [DynamicInvoke] expect(myArray['length'], 1) requires dynamic invoke (test/codegen/js_test.dart, line 562, col 7)
info: [DynamicInvoke] myArray['length'] requires dynamic invoke (test/codegen/js_test.dart, line 562, col 14)
info: [DynamicInvoke] expect(myArray[0], "value2") requires dynamic invoke (test/codegen/js_test.dart, line 563, col 7)
info: [DynamicInvoke] myArray[0] requires dynamic invoke (test/codegen/js_test.dart, line 563, col 14)
info: [DynamicCast] context['Foo'] (dynamic) will need runtime check to cast to type JsFunction (test/codegen/js_test.dart, line 565, col 32)
info: [DynamicInvoke] expect(foo.callMethod('getAge'), 10) requires dynamic invoke (test/codegen/js_test.dart, line 567, col 7)
info: [DynamicInvoke] group('transferrables', () {group('JS->Dart', () {test('DateTime', () {var date = context.callMethod('getNewDate'); expect(date is DateTime, true);}); test('window', () {expect(context['window'] is Window, true);}); test('foreign browser objects should be proxied', () {var iframe = document.createElement('iframe'); document.body.appendChild(iframe); var proxy = new JsObject.fromBrowserObject(iframe); var contentWindow = proxy['contentWindow']; expect(contentWindow, isNot((a) => a is Window)); expect(contentWindow, (a) => a is JsObject); var foreignDoc = contentWindow['document']; expect(foreignDoc, isNot((a) => a is Node)); expect(foreignDoc, (a) => a is JsObject); var clicked = false; foreignDoc['onclick'] = (e) {expect(e, isNot((a) => a is Event)); expect(e, (a) => a is JsObject); clicked = true;}; context.callMethod('fireClickEvent', [contentWindow]); expect(clicked, true);}); test('document', () {expect(context['document'] is Document, true);}); test('Blob', () {var blob = context.callMethod('getNewBlob'); expect(blob is Blob, true); expect(blob.type, 'text/html');}); test('unattached DivElement', () {var node = context.callMethod('getNewDivElement'); expect(node is DivElement, true);}); test('Event', () {var event = context.callMethod('getNewEvent'); expect(event is Event, true);}); test('ImageData', () {var node = context.callMethod('getNewImageData'); expect(node is ImageData, true);});}); group('Dart->JS', () {test('Date', () {context['o'] = new DateTime(1995, 12, 17); var dateType = context['Date']; expect(context.callMethod('isPropertyInstanceOf', ['o', dateType]), true); context.deleteProperty('o');}); test('window', () {context['o'] = window; var windowType = context['Window']; expect(context.callMethod('isPropertyInstanceOf', ['o', windowType]), true); context.deleteProperty('o');}); test('document', () {context['o'] = document; var documentType = context['Document']; expect(context.callMethod('isPropertyInstanceOf', ['o', documentType]), true); context.deleteProperty('o');}); test('Blob', () {var fileParts = ['<a id="a"><b id="b">hey!</b></a>']; context['o'] = new Blob(fileParts, type: 'text/html'); var blobType = context['Blob']; expect(context.callMethod('isPropertyInstanceOf', ['o', blobType]), true); context.deleteProperty('o');}); test('unattached DivElement', () {context['o'] = document.createElement('div'); var divType = context['HTMLDivElement']; expect(context.callMethod('isPropertyInstanceOf', ['o', divType]), true); context.deleteProperty('o');}); test('Event', () {context['o'] = new CustomEvent('test'); var eventType = context['Event']; expect(context.callMethod('isPropertyInstanceOf', ['o', eventType]), true); context.deleteProperty('o');}); test('ImageData', () {CanvasElement canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d') as CanvasRenderingContext2D; context['o'] = ctx.createImageData(1, 1); var imageDataType = context['ImageData']; expect(context.callMethod('isPropertyInstanceOf', ['o', imageDataType]), true); context.deleteProperty('o');});});}) requires dynamic invoke (test/codegen/js_test.dart, line 572, col 3)
info: [DynamicInvoke] group('JS->Dart', () {test('DateTime', () {var date = context.callMethod('getNewDate'); expect(date is DateTime, true);}); test('window', () {expect(context['window'] is Window, true);}); test('foreign browser objects should be proxied', () {var iframe = document.createElement('iframe'); document.body.appendChild(iframe); var proxy = new JsObject.fromBrowserObject(iframe); var contentWindow = proxy['contentWindow']; expect(contentWindow, isNot((a) => a is Window)); expect(contentWindow, (a) => a is JsObject); var foreignDoc = contentWindow['document']; expect(foreignDoc, isNot((a) => a is Node)); expect(foreignDoc, (a) => a is JsObject); var clicked = false; foreignDoc['onclick'] = (e) {expect(e, isNot((a) => a is Event)); expect(e, (a) => a is JsObject); clicked = true;}; context.callMethod('fireClickEvent', [contentWindow]); expect(clicked, true);}); test('document', () {expect(context['document'] is Document, true);}); test('Blob', () {var blob = context.callMethod('getNewBlob'); expect(blob is Blob, true); expect(blob.type, 'text/html');}); test('unattached DivElement', () {var node = context.callMethod('getNewDivElement'); expect(node is DivElement, true);}); test('Event', () {var event = context.callMethod('getNewEvent'); expect(event is Event, true);}); test('ImageData', () {var node = context.callMethod('getNewImageData'); expect(node is ImageData, true);});}) requires dynamic invoke (test/codegen/js_test.dart, line 574, col 5)
info: [DynamicInvoke] test('DateTime', () {var date = context.callMethod('getNewDate'); expect(date is DateTime, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 576, col 7)
info: [DynamicInvoke] expect(date is DateTime, true) requires dynamic invoke (test/codegen/js_test.dart, line 578, col 9)
info: [DynamicInvoke] test('window', () {expect(context['window'] is Window, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 581, col 7)
info: [DynamicInvoke] expect(context['window'] is Window, true) requires dynamic invoke (test/codegen/js_test.dart, line 582, col 9)
info: [DynamicInvoke] test('foreign browser objects should be proxied', () {var iframe = document.createElement('iframe'); document.body.appendChild(iframe); var proxy = new JsObject.fromBrowserObject(iframe); var contentWindow = proxy['contentWindow']; expect(contentWindow, isNot((a) => a is Window)); expect(contentWindow, (a) => a is JsObject); var foreignDoc = contentWindow['document']; expect(foreignDoc, isNot((a) => a is Node)); expect(foreignDoc, (a) => a is JsObject); var clicked = false; foreignDoc['onclick'] = (e) {expect(e, isNot((a) => a is Event)); expect(e, (a) => a is JsObject); clicked = true;}; context.callMethod('fireClickEvent', [contentWindow]); expect(clicked, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 585, col 7)
info: [DynamicInvoke] document.createElement('iframe') requires dynamic invoke (test/codegen/js_test.dart, line 586, col 22)
info: [DynamicInvoke] document.body.appendChild(iframe) requires dynamic invoke (test/codegen/js_test.dart, line 587, col 9)
info: [DynamicInvoke] document.body requires dynamic invoke (test/codegen/js_test.dart, line 587, col 9)
info: [DynamicInvoke] expect(contentWindow, isNot((a) => a is Window)) requires dynamic invoke (test/codegen/js_test.dart, line 592, col 9)
info: [DynamicInvoke] isNot((a) => a is Window) requires dynamic invoke (test/codegen/js_test.dart, line 592, col 31)
info: [DynamicInvoke] expect(contentWindow, (a) => a is JsObject) requires dynamic invoke (test/codegen/js_test.dart, line 593, col 9)
info: [DynamicInvoke] contentWindow['document'] requires dynamic invoke (test/codegen/js_test.dart, line 596, col 26)
info: [DynamicInvoke] expect(foreignDoc, isNot((a) => a is Node)) requires dynamic invoke (test/codegen/js_test.dart, line 597, col 9)
info: [DynamicInvoke] isNot((a) => a is Node) requires dynamic invoke (test/codegen/js_test.dart, line 597, col 28)
info: [DynamicInvoke] expect(foreignDoc, (a) => a is JsObject) requires dynamic invoke (test/codegen/js_test.dart, line 598, col 9)
info: [DynamicInvoke] foreignDoc['onclick'] requires dynamic invoke (test/codegen/js_test.dart, line 602, col 9)
info: [DynamicInvoke] expect(e, isNot((a) => a is Event)) requires dynamic invoke (test/codegen/js_test.dart, line 603, col 11)
info: [DynamicInvoke] isNot((a) => a is Event) requires dynamic invoke (test/codegen/js_test.dart, line 603, col 21)
info: [DynamicInvoke] expect(e, (a) => a is JsObject) requires dynamic invoke (test/codegen/js_test.dart, line 604, col 11)
info: [DynamicInvoke] expect(clicked, true) requires dynamic invoke (test/codegen/js_test.dart, line 609, col 9)
info: [DynamicInvoke] test('document', () {expect(context['document'] is Document, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 612, col 7)
info: [DynamicInvoke] expect(context['document'] is Document, true) requires dynamic invoke (test/codegen/js_test.dart, line 613, col 9)
info: [DynamicInvoke] test('Blob', () {var blob = context.callMethod('getNewBlob'); expect(blob is Blob, true); expect(blob.type, 'text/html');}) requires dynamic invoke (test/codegen/js_test.dart, line 616, col 7)
info: [DynamicInvoke] expect(blob is Blob, true) requires dynamic invoke (test/codegen/js_test.dart, line 618, col 9)
info: [DynamicInvoke] expect(blob.type, 'text/html') requires dynamic invoke (test/codegen/js_test.dart, line 619, col 9)
info: [DynamicInvoke] blob.type requires dynamic invoke (test/codegen/js_test.dart, line 619, col 16)
info: [DynamicInvoke] test('unattached DivElement', () {var node = context.callMethod('getNewDivElement'); expect(node is DivElement, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 622, col 7)
info: [DynamicInvoke] expect(node is DivElement, true) requires dynamic invoke (test/codegen/js_test.dart, line 624, col 9)
info: [DynamicInvoke] test('Event', () {var event = context.callMethod('getNewEvent'); expect(event is Event, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 627, col 7)
info: [DynamicInvoke] expect(event is Event, true) requires dynamic invoke (test/codegen/js_test.dart, line 629, col 9)
info: [DynamicInvoke] test('ImageData', () {var node = context.callMethod('getNewImageData'); expect(node is ImageData, true);}) requires dynamic invoke (test/codegen/js_test.dart, line 632, col 7)
info: [DynamicInvoke] expect(node is ImageData, true) requires dynamic invoke (test/codegen/js_test.dart, line 634, col 9)
info: [DynamicInvoke] group('Dart->JS', () {test('Date', () {context['o'] = new DateTime(1995, 12, 17); var dateType = context['Date']; expect(context.callMethod('isPropertyInstanceOf', ['o', dateType]), true); context.deleteProperty('o');}); test('window', () {context['o'] = window; var windowType = context['Window']; expect(context.callMethod('isPropertyInstanceOf', ['o', windowType]), true); context.deleteProperty('o');}); test('document', () {context['o'] = document; var documentType = context['Document']; expect(context.callMethod('isPropertyInstanceOf', ['o', documentType]), true); context.deleteProperty('o');}); test('Blob', () {var fileParts = ['<a id="a"><b id="b">hey!</b></a>']; context['o'] = new Blob(fileParts, type: 'text/html'); var blobType = context['Blob']; expect(context.callMethod('isPropertyInstanceOf', ['o', blobType]), true); context.deleteProperty('o');}); test('unattached DivElement', () {context['o'] = document.createElement('div'); var divType = context['HTMLDivElement']; expect(context.callMethod('isPropertyInstanceOf', ['o', divType]), true); context.deleteProperty('o');}); test('Event', () {context['o'] = new CustomEvent('test'); var eventType = context['Event']; expect(context.callMethod('isPropertyInstanceOf', ['o', eventType]), true); context.deleteProperty('o');}); test('ImageData', () {CanvasElement canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d') as CanvasRenderingContext2D; context['o'] = ctx.createImageData(1, 1); var imageDataType = context['ImageData']; expect(context.callMethod('isPropertyInstanceOf', ['o', imageDataType]), true); context.deleteProperty('o');});}) requires dynamic invoke (test/codegen/js_test.dart, line 639, col 5)
info: [DynamicInvoke] test('Date', () {context['o'] = new DateTime(1995, 12, 17); var dateType = context['Date']; expect(context.callMethod('isPropertyInstanceOf', ['o', dateType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 641, col 7)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', dateType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 644, col 9)
info: [DynamicInvoke] test('window', () {context['o'] = window; var windowType = context['Window']; expect(context.callMethod('isPropertyInstanceOf', ['o', windowType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 649, col 7)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', windowType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 652, col 9)
info: [DynamicInvoke] test('document', () {context['o'] = document; var documentType = context['Document']; expect(context.callMethod('isPropertyInstanceOf', ['o', documentType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 657, col 7)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', documentType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 660, col 9)
info: [DynamicInvoke] test('Blob', () {var fileParts = ['<a id="a"><b id="b">hey!</b></a>']; context['o'] = new Blob(fileParts, type: 'text/html'); var blobType = context['Blob']; expect(context.callMethod('isPropertyInstanceOf', ['o', blobType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 665, col 7)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', blobType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 669, col 9)
info: [DynamicInvoke] test('unattached DivElement', () {context['o'] = document.createElement('div'); var divType = context['HTMLDivElement']; expect(context.callMethod('isPropertyInstanceOf', ['o', divType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 674, col 7)
info: [DynamicInvoke] document.createElement('div') requires dynamic invoke (test/codegen/js_test.dart, line 675, col 24)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', divType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 677, col 9)
info: [DynamicInvoke] test('Event', () {context['o'] = new CustomEvent('test'); var eventType = context['Event']; expect(context.callMethod('isPropertyInstanceOf', ['o', eventType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 682, col 7)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', eventType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 685, col 9)
info: [DynamicInvoke] test('ImageData', () {CanvasElement canvas = document.createElement('canvas'); var ctx = canvas.getContext('2d') as CanvasRenderingContext2D; context['o'] = ctx.createImageData(1, 1); var imageDataType = context['ImageData']; expect(context.callMethod('isPropertyInstanceOf', ['o', imageDataType]), true); context.deleteProperty('o');}) requires dynamic invoke (test/codegen/js_test.dart, line 693, col 7)
info: [DynamicInvoke] document.createElement('canvas') requires dynamic invoke (test/codegen/js_test.dart, line 694, col 32)
info: [DynamicInvoke] canvas.getContext('2d') requires dynamic invoke (test/codegen/js_test.dart, line 695, col 19)
info: [DynamicInvoke] ctx.createImageData(1, 1) requires dynamic invoke (test/codegen/js_test.dart, line 696, col 24)
info: [DynamicInvoke] expect(context.callMethod('isPropertyInstanceOf', ['o', imageDataType]), true) requires dynamic invoke (test/codegen/js_test.dart, line 698, col 9)
